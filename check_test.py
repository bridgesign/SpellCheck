from check_defn import *
import numpy as np

def test(file, matrix):
    accuracy = 0
    counter = 0
    test_examples = 0
    line = file.readline()
    #word list
    word_list = []
    #query list
    query_list = []
    #Reads the data from the file
    while(line!=''):
        (word,query) = line.split(':')
        #query contains different queries
        #corresponding to same word
        query = query.split()
        word_list.append(word)
        query_list.append(query)
        counter+=1
        test_examples+=len(query)
        line = file.readline()
    for i in range(counter):
        print(i)
        for query in query_list[i]:
            (cost_minimum, found_word) = forward(query, word_list,matrix,0)
            if found_word == word_list[i]:
                accuracy+=1
    return accuracy*100/test_examples

#Found Matrix after training
matrix = np.array([1.00207033, 1.00207033, 1.00207033, 1.00207033, 1.00207033,
       1.00207033, 1.00207033, 1.00207033, 1.01167296, 1.01167296,
       1.01167296, 1.01167296, 1.01167296, 1.01167296, 1.01167296,
       1.01526516, 1.01526516, 1.01526516, 1.01526516, 1.01526516,
       1.01526516, 1.00342376, 1.00342376, 1.00342376, 1.00342376,
       1.00342376, 1.00632963, 1.00632963, 1.00632963, 1.00632963,
       1.01220416, 1.01220416, 1.01220416, 1.0255741 , 1.0255741 ,
       1.01698925, 1.06247419, 1.06247419, 1.06247419, 1.06247419,
       1.06247419, 1.06247419, 1.06247419, 1.0852377 , 1.0852377 ,
       1.0852377 , 1.0852377 , 1.0852377 , 1.0852377 , 1.02207624,
       1.02207624, 1.02207624, 1.02207624, 1.02207624, 1.03257396,
       1.03257396, 1.03257396, 1.03257396, 1.06097385, 1.06097385,
       1.06097385, 1.13657061, 1.13657061, 1.09622785, 1.12023581,
       1.12023581, 1.12023581, 1.12023581, 1.12023581, 1.12023581,
       1.02194491, 1.02194491, 1.02194491, 1.02194491, 1.02194491,
       1.04475403, 1.04475403, 1.04475403, 1.04475403, 1.08423745,
       1.08423745, 1.08423745, 1.20227688, 1.20227688, 1.13928286,
       1.01019091, 1.01019091, 1.01019091, 1.01019091, 1.01019091,
       1.00768307, 1.00768307, 1.00768307, 1.00768307, 1.02083745,
       1.02083745, 1.02083745, 1.02985533, 1.02985533, 1.02080395,
       1.02762618, 1.02762618, 1.02762618, 1.02762618, 1.03501177,
       1.03501177, 1.03501177, 1.08032576, 1.08032576, 1.05278122,
       1.06287336, 1.06287336, 1.06287336, 1.1379173 , 1.1379173 ,
       1.09600182, 1.35498133, 1.35498133, 1.23884329, 1.16465296,
       1.33944816, 1.33944816, 1.33944816, 1.33944816, 1.33944816,
       1.33944816, 1.33944816, 1.45328884, 1.45328884, 1.45328884,
       1.45328884, 1.45328884, 1.45328884, 1.13138424, 1.13138424,
       1.13138424, 1.13138424, 1.13138424, 1.16335241, 1.16335241,
       1.16335241, 1.16335241, 1.31728892, 1.31728892, 1.31728892,
       1.70153063, 1.70153063, 1.50543181, 1.65059586, 1.65059586,
       1.65059586, 1.65059586, 1.65059586, 1.65059586, 1.13979247,
       1.13979247, 1.13979247, 1.13979247, 1.13979247, 1.23606129,
       1.23606129, 1.23606129, 1.23606129, 1.43609388, 1.43609388,
       1.43609388, 2.06104354, 2.06104354, 1.75557029, 1.07409265,
       1.07409265, 1.07409265, 1.07409265, 1.07409265, 1.04297724,
       1.04297724, 1.04297724, 1.04297724, 1.11485639, 1.11485639,
       1.11485639, 1.17543719, 1.17543719, 1.13462789, 1.13707893,
       1.13707893, 1.13707893, 1.13707893, 1.16698989, 1.16698989,
       1.16698989, 1.4147033 , 1.4147033 , 1.28409618, 1.30747831,
       1.30747831, 1.30747831, 1.69429009, 1.69429009, 1.4949733 ,
       2.82852786, 2.82852786, 2.26125758, 1.89994755, 1.96538283,
       1.96538283, 1.96538283, 1.96538283, 1.96538283, 1.96538283,
       1.15530753, 1.15530753, 1.15530753, 1.15530753, 1.15530753,
       1.34300406, 1.34300406, 1.34300406, 1.34300406, 1.63690322,
       1.63690322, 1.63690322, 2.62716168, 2.62716168, 2.14469859,
       1.05534365, 1.05534365, 1.05534365, 1.05534365, 1.05534365,
       1.05143378, 1.05143378, 1.05143378, 1.05143378, 1.12696685,
       1.12696685, 1.12696685, 1.22451995, 1.22451995, 1.15919327,
       1.19219836, 1.19219836, 1.19219836, 1.19219836, 1.24049992,
       1.24049992, 1.24049992, 1.61214269, 1.61214269, 1.41683016,
       1.42909887, 1.42909887, 1.42909887, 2.05680775, 2.05680775,
       1.74643593, 3.8357374 , 3.8357374 , 2.95132678, 2.37867965,
       1.04402669, 1.04402669, 1.04402669, 1.04402669, 1.04402669,
       1.01445022, 1.01445022, 1.01445022, 1.01445022, 1.06400389,
       1.06400389, 1.06400389, 1.0512615 , 1.0512615 , 1.03987745,
       1.02897961, 1.02897961, 1.02897961, 1.02897961, 1.04364506,
       1.04364506, 1.04364506, 1.08460699, 1.08460699, 1.05659592,
       1.10790593, 1.10790593, 1.10790593, 1.16865413, 1.16865413,
       1.12627212, 1.3680316 , 1.3680316 , 1.24956089, 1.17257137,
       1.1341089 , 1.1341089 , 1.1341089 , 1.1341089 , 1.14904981,
       1.14904981, 1.14904981, 1.35408408, 1.35408408, 1.23174107,
       1.17842245, 1.17842245, 1.17842245, 1.42457961, 1.42457961,
       1.28900797, 2.12983559, 2.12983559, 1.74327309, 1.51426739,
       1.31621932, 1.31621932, 1.31621932, 1.6996333 , 1.6996333 ,
       1.49106468, 2.83586688, 2.83586688, 2.25920508, 1.89413202,
       6.07138715, 6.07138715, 4.40553922, 3.36251828, 2.67910853])

file = open('spell-testset1.txt','r')
print('Test Set: spell-testset1.txt')
print('Accuracy:',test(file,matrix),'%')
file.close()
file = open('spell-testset2.txt','r')
print('Test Set: spell-testset2.txt')
print('Accuracy:',test(file,matrix),'%')
file.close()
file = open('aspell.txt','r')
print('Test Set: aspell.txt')
print('Accuracy:',test(file,matrix),'%')
file.close()
